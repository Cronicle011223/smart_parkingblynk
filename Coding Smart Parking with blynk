/*************************************************************

  This sketch shows how to write values to Virtual Pins

  NOTE:
  BlynkTimer provides SimpleTimer functionality:
    http://playground.arduino.cc/Code/SimpleTimer

  App dashboard setup:
    Value Display widget attached to Virtual Pin V5
 *************************************************************/

/* Fill-in information from Blynk Device Info here */
#define BLYNK_TEMPLATE_ID "TMPL68cQgIKMM"
#define BLYNK_TEMPLATE_NAME "Smart parking"
#define BLYNK_AUTH_TOKEN "aYb2Em33hPefBQIObUzUaDKEiTAhtj40"

/* Comment this out to disable prints and save space */
#define BLYNK_PRINT Serial


#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>
#include <Ultrasonic.h>
#include <ESP32Servo.h>

Servo myservo;
int counter = 0;
int pos = 0;
int JumblahDeteksi = 0;
// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "oki";  // your ssid
char pass[] = "12345677";           // your passchar pass[] = "YourPassword";
Ultrasonic ultrasonic(2, 5);
int distance;
int modeAuto = 0;
BlynkTimer timer;

// This function sends Arduino's up time every second to Virtual Pin (5).
// In the app, Widget's reading frequency should be set to PUSH. This means
// that you define how often to send data to Blynk App.
BLYNK_WRITE (V1){
  int pinValue = param.asInt(); // assigning incoming value from pin V1 to a variable
      Blynk.virtualWrite(V1, pinValue);
       Serial.println(pinValue);
  if (pinValue == 0 && modeAuto == 0){
    digitalWrite(21,0);
  }
  else if(pinValue == 1 && modeAuto == 0){
    digitalWrite(21,1);
  }
}
BLYNK_WRITE (V0) {
  int Value = param.asInt(); // assigning incoming value from pin V1 to a variable
      Blynk.virtualWrite(V0,Value);
      Serial.println(Value);
  if (Value == 1 && modeAuto == 0){
    digitalWrite(21,0);
  }
  else if(Value== 0 && modeAuto == 1){
    digitalWrite(21,0);
  }
}
BLYNK_WRITE (V4) {
  int Value = param.asInt(); // assigning incoming value from pin V1 to a variable
      Blynk.virtualWrite(V4,Value);
      Serial.println(Value);
  if (Value == 1 && modeAuto == 0){
    digitalWrite(22,1);
    myservo.write(90);
  }
  else if(Value== 0 ){
    modeAuto = 0;
    digitalWrite(22,0);
    myservo.write(0);
  }
}
void myTimerEvent() {
  distance = ultrasonic.read();
  Serial.print("jarak di CM :");
  Serial.println(ultrasonic.read());
  if (distance > 10) {
    JumblahDeteksi = 0;
    Serial.print("Jumblah deteksi: ");
    Serial.println(counter);
    digitalWrite(23, LOW);
    myservo.write(90);
    
  } else {
     JumblahDeteksi = 1;
    digitalWrite(23, HIGH);
    myservo.write(0);
    Blynk.virtualWrite(V2, ultrasonic.read());
    Blynk.virtualWrite(V3, counter);
  }
  delay(500);
  if (JumblahDeteksi != pos){
    if (JumblahDeteksi == 1){
      counter = counter + 1;
    }
  }
}

void setup() {
  // Debug console
  pinMode(23, OUTPUT);
  pinMode(22, OUTPUT);
  pinMode(21, OUTPUT);
  Serial.begin(115200);
  myservo.attach(4);
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
  // You can also specify server:
  //Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass, "blynk.cloud", 80);
  //Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass, IPAddress(192,168,1,100), 8080);

  // Setup a function to be called every second
  timer.setInterval(1000L, myTimerEvent);
}

  // process received value

void loop() {
  Blynk.run();
  timer.run();  // Initiates BlynkTimer
}
